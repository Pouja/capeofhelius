# rant 1
So an event system
What kinda collisions/events do we have?
Collision with the wall layer
Collision with the slope layer
Collision with game objects (spikes, water, road direction, end/start thingy, coins, doors)
Colision with another sprite (ie enemy or a spell)

Resolving wall/slope collision is easy and almost implemented (except slope).
So we can have something like a game object class that represents a game object. But how are we going to represent all the different kinds of game objects in a class?

Hmm maybe we should first (I dont get it why I alwasy talkin in 'we' form but ok) which kinda events can be triggered:
Obvious ones:
    Death event
    Begin event (when the player spawns in the scene/map)
    Win event (when the player reaches the end of the map, the bord with the exit on. There still has to be checked if the player has all the winning conditions, like having 10 coins, or just simply reached the end).
    Text event (when the player collides with a sign and text should be shown)

Now I think about it, wall and slope collision are also events... hmm
We can also have more complexed events, like when hitting a rock the gravity of the game will change.
But that can be done smh like:
    AwesomeScene::onGameObject(GID tileId, TileType tileType, Event* event);
So when that method is invoked, the complex stuff can happen... sounds sound.

The only downside is that it is hard to implement custom events in cocos2d-x...
We will see how it goes.

# rant 2
So i didn extend the event system handler of cocos2d-x since it will just make things more complicated.
The current approach is that the basicscene checks if the player position is on a non empty tile in the layer "event".
If that is true it will fetch the tile property "event" from the tile which is an integer presenting the kind of event that is should triger.
The current events are:
    DEATH
    WALL
    SLOPE
    START
    FINISH
    COLLECTABLE
    TEXTBOX
    NONE

So there is an event tile SLOPE and WALL but those are currently not used. Maybe something for in the future.
So how does TEXTBOX work? For now the basicscene should check the tile position when such event is triggered to display the correct text in the game hub.

I had an idea that I could create an array of TileProperty, where each entry is one of the events. That will make the lookup for collisions a bit faster. The memory it will take: in the worst case I have to create an array of 200 (length) * 200 (width) * 2 (roughly 1 byte for an integer, plus overhead) = 80kb which is nothing tbh. Another possible downsides? If I'm changing the location of removing a tile, I also have to update that integer array. Is it possible to have two different kind of tiles placed on each other...hmm.. I think I will reconsider this approach when I have finished the level designs.

After some reconsideration I have to implement this, because I really want slopes and jump through tiles.
In the tile map I can then define which tiles are walls, which are jump through, which are left/right slopes, where enemies should spawn and walk to.